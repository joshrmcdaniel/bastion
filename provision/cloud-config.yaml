#cloud-config

write_files:
  - path: /etc/sysctl.conf
    content: |
      net.ipv6.conf.all.forwarding = 1
      net.ipv4.ip_forward = 1
    owner: root:root
    permissions: '644'
    defer: false
    append: true
  - path: /etc/wireguard/postup.sh
    content: |
      #!/bin/bash
      iptables -A FORWARD -i $1 -j ACCEPT
      iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
      iptables -t nat -A POSTROUTING -o $1 -j MASQUERADE
      ip6tables -A FORWARD -i $1 -j ACCEPT
    owner: root:root
    permissions: '500'
    defer: false
    append: true
  - path: /etc/wireguard/postdown.sh
    content: |
      #!/bin/bash
      iptables -D FORWARD -i $1 -j ACCEPT
      iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE
      iptables -t nat -D POSTROUTING -o $1 -j MASQUERADE
      ip6tables -D FORWARD -i $1 -j ACCEPT
    owner: root:root
    permissions: '500'
    defer: false
    append: true
  - path: /etc/wireguard/wg0.conf
    content: |
      [Interface]
      PrivateKey = WG_PRIV_KEY
      PostUp = /etc/wireguard/postup.sh "%i"
      PostDown = /etc/wireguard/postdown.sh "%i"

      # Wireguard internal network. Can't overlap with home network
      Address = 172.22.99.1/29
      ListenPort = ${wireguard_port}
      [Peer]
      # External host
      PublicKey = ${wan_wg_public_key}
      AllowedIPs = 172.22.99.4/32
      [Peer]
      # Machine to VPN to
      PublicKey = ${internal_wg_public_key}
      AllowedIPs = 172.22.99.3/32%{ if cidrs != "" },${cidrs}%{ endif }
    owner: root:root
    permissions: '600'
    defer: false
    append: false

packages:
  - wireguard-tools
  - iptables
  - ufw
  - unzip

runcmd:
  - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "/var/run/awscliv2.zip"
  - unzip -qq /var/run/awscliv2.zip
  - /var/run/aws/install
  - rm -rf /var/run/aws /var/run/awscliv2.zip
  - ufw default deny incoming
  - ufw default allow outgoing
  %{~ if ssh_enabled ~}
  - ufw allow ssh
  %{~ endif ~}
  - ufw allow in on wg0 proto udp from 172.22.99.1/29 port ${wireguard_port}
  - ufw allow in on eth0 proto udp from any port ${wireguard_port}
  - ufw --force enable
  - WG_PRIV_KEY=$(wg genkey)
  - sed -i "s^WG_PRIV_KEY^$WG_PRIV_KEY^g" /etc/wireguard/wg0.conf
  - WG_PUB_KEY=$(printf '%s' "$WG_PRIV_KEY" | wg pubkey)
  - aws ssm put-parameter --name '${pub_key_param.name}' --type ${pub_key_param.type} --value "$WG_PUB_KEY" --overwrite --output text --no-cli-pager
  - sysctl -p
  - systemctl enable --now wg-quick@wg0.service
